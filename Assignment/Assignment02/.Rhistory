setwd("C:\\Users\\dev\\Desktop\\2021_Spatial-Bigdata-Analysis\\Assignment\\Assignment03")
# 라이브러리: 실습에 필요한 라이브러리를 선언한다.
library("sp")
library("rgdal")
library("rgeos")
library("ggmap")
library("tmap")
library("spatstat")
library("raster")
library("spdep")
library("gstat")
library("spgwr")
library("RColorBrewer")
library("classInt")
# [5-5]
admin <- readOGR(dsn = ".", layer = "admin")
shelt <- readOGR(dsn = ".", layer = "shelter")
plot(admin, col="green",border="red",axes=TRUE)
plot(shelt,add=TRUE,col="blue",pch=2,cex=0.5)
title("서울시 대피소 위치")
pop = read.csv("seoul.csv")
admin = merge(admin,pop,by.x="SIG_CD",by.y="code")
utm_k = CRS("+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs")
admin_utm = spTransform(admin,utm_k)
admin_utm$area = gArea(admin_utm,byid=TRUE)
admin_utm$popden = admin_utm$pop2017 / (admin_utm$area /100000)
brk = classIntervals(admin_utm@data$popden, n = 5, style="jenks")
pal = brewer.pal(5,"OrRd")
spplot(admin_utm,"popden",con.regions=pal, at=brk$brks,main="서울시 구별 인구밀도")
tm_shape(admin_utm) + tm_polygons(col="popden",n=5,title="서울시 구별 인구밀도", sytle = "jenks",palette = "OrRd") + tm_legend(outside = TRUE)
api_key = "AIzaSyBpL0nkwtjhofw8jHreklnGIgnJj66d5gs"
register_google(key = api_key, write = TRUE)
gmap <- get_map(location = c(lon = 127, lat = 37.55), zoom = 11, maptype = "roadmap")
mapdata <- data.frame(shelt)
mapdata$최대수용인원_num <- as.numeric(mapdata$최대수용인)
mapdata$행정동코드_num <- as.numeric(mapdata$행정동코드)
gmap.map = ggmap(gmap)+geom_point(data=mapdata,aes(x=long,y=lat,colour=mapdata$maxn,size=mapdata$maxn),alpha=1)
gmap.map
admin.f <- fortify(admin)
admin@data$id <- rownames(admin@data)
admin.m <- merge(admin.f, admin@data, by = "id")
gmap.map2 = ggmap(gmap) + geom_polygon(data=admin.m, aes(x=long,y=lat,group=group,fill=pop2017),alpha=0.4)
gmap.map2
setwd("C:\\Users\\dev\\Desktop\\2021_Spatial-Bigdata-Analysis\\Assignment\\Assignment02")
library("sp")
library("rgdal")
library("rgeos")
library("ggmap")
library("tmap")
library("spatstat")
library("raster")
library("spdep")
library("gstat")
library("spgwr")
# 4.4.1 테이블 데이터 불러오기
sh <- read.csv("C:\\Users\\dev\\Desktop\\2021_Spatial-Bigdata-Analysis\\Assignment\\Assignment02_data\\shelter.csv")
pt <- data.frame(longitude=sh$경도, latitude=sh$위도)
cs <- CRS("+proj=longlat +datum=WGS84")
library("spgwr")
# 4.4.1 테이블 데이터 불러오기
sh <- read.csv("shelter.csv")
pt <- data.frame(longitude=sh$경도, latitude=sh$위도)
cs <- CRS("+proj=longlat +datum=WGS84")
spt <- SpatialPoints(pt, proj4string = cs)
shelt <- SpatialPointsDataFrame(spt, data = sh)
spplot(shelt, zcol = "최대수용인원")
# 4.4.2 쉐이프 파일 불러오기
admin <- readOGR(dsn=".",layer="TL_SCCO_SIG_W")
dule <- readOGR(dsn=".",layer="DoDreamWay01_L_W")
road <- readOGR(dsn=".",layer="SDE_TL_SPRD_RW_2017_W")
cs = CRS("+proj=longlat +datum=WGS84")
proj4string(admin) = cs
proj4string(dule) = cs
proj4string(road) = cs
spplot(admin, zcol = "SHAPE_AREA")
# 4.4.3 생성된 데이터 저장하기
names(shelt) = c("no", "name", "addr", "maxn", "curn", "tel", "admincode", "adminname", "long", "lat")
